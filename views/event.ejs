<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Management</title>
    <link href="samStyle.css" rel="stylesheet" type="text/css">
    <style>
        .form-container {
            margin: 50px auto;
            width: 50%;
            background-color: #f8fbff;
            border: 1px solid #e1e8f0;
            border-radius: 10px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .form-container h2 {
            text-align: center;
            font-size: 20px;
            color: #333;
            margin-bottom: 20px;
        }

        .form-group {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .form-group label {
            font-size: 14px;
            color: #333;
            flex: 1;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            flex: 2;
            padding: 8px;
            font-size: 14px;
            border: 1px solid #e1e8f0;
            border-radius: 5px;
        }

        .form-group textarea {
            resize: none;
            height: 60px;
        }

        .form-container button {
            display: block;
            width: 100px;
            margin: 20px auto 0;
            background-color: #32aaff;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            padding: 10px;
            cursor: pointer;
        }

        .form-container button:hover {
            background-color: #2389d9;
        }

        .event-item {
            margin: 10px 0;
            padding: 10px;
            background-color: #f0f7ff;
            border-radius: 5px;
            border: 1px solid #e1e8f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .event-item:hover {
            background-color: #e0efff;
        }

        .delete-btn {
            background-color: #ff4d4d;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 12px;
            padding: 5px 10px;
            cursor: pointer;
        }

        .delete-btn:hover {
            background-color: #d93636;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5); 
        }

        .modal-content {
            background-color: #fff;
            margin: 10% auto;
            padding: 20px;
            border-radius: 10px;
            width: 40%;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 15px;
            text-align: center;
        }

        .modal-body p {
            margin: 10px 0;
            font-size: 14px;
        }

        .modal-close {
            float: right;
            font-size: 20px;
            font-weight: bold;
            cursor: pointer;
            color: #333;
        }

        .modal-close:hover {
            color: #d00;
        }
        #file-container {
            margin-top: 15px;
        }

        #modal-file-content {
            border: 1px solid #e1e8f0;
            padding: 10px;
            background-color: #f8fbff;
            border-radius: 5px;
            overflow: auto;
            max-height: 300px;
            text-align: center;
        }

    </style>
</head>
<body>
  <%-include("staffMenu")%>

    <div class="dashboard">
        <div class="sidebar">
            <h3>Upcoming Events</h3>
            <div class="events-list" id="upcoming-events">
                <p>No upcoming events</p>
            </div>
        </div>
        <div class="main-content">
            <div class="form-container">
                <h2>Events</h2>
                <form>
                    <div class="form-group">
                        <label for="event-name">Event Name:</label>
                        <input type="text" id="event-name" placeholder="Event Name" required>
                    </div>
                    <div class="form-group">
                        <label for="event-date">Event Date:</label>
                        <input type="date" id="event-date" required>
                    </div>
                    <div class="form-group">
                        <label for="event-organizer">Organizer:</label>
                        <input type="text" id="event-organizer" placeholder="Organizer Name" required>
                    </div>
                    <div class="form-group">
                        <label for="event-category">Category:</label>
                        <select id="event-category" required>
                            <option value="" disabled selected>Select Category</option>
                            <option value="Music">Music</option>
                            <option value="Sports">Sports</option>
                            <option value="Academic">Academic</option>
                            <option value="Workshops">Workshops</option>
                            <option value="Certificate Course">Certificate Course</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="event-rewards">Rewards:</label>
                        <input type="text" id="event-rewards" placeholder="e.g., Certificates, Prizes">
                    </div>
                    <div class="form-group">
                        <label for="instructions">Additional Instructions:</label>
                        <textarea id="instructions" placeholder="Additional Instructions"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="event-file">Upload File:</label>
                        <input type="file" id="event-file" accept=".pdf,.jpg,.png,.doc,.docx,.txt">
                    </div>
                    <button type="submit">Save</button>
                </form>
            </div>
        </div>
    </div>

    <div id="event-modal" class="modal">
        <div class="modal-content">
            <span class="modal-close">&times;</span>
            <div class="modal-header">Event Details</div>
            <div class="modal-body">
                <p><strong>Event Name:</strong> <span id="modal-event-name"></span></p>
                <p><strong>Event Date:</strong> <span id="modal-event-date"></span></p>
                <p><strong>Organizer:</strong> <span id="modal-event-organizer"></span></p>
                <p><strong>Category:</strong> <span id="modal-event-category"></span></p>
                <p><strong>Rewards:</strong> <span id="modal-event-rewards"></span></p>
                <p><strong>Instructions:</strong> <span id="modal-instructions"></span></p>
                <div id="file-container" style="display: none;">
                    <strong>Uploaded File:</strong>
                    <div id="modal-file-content"></div>
                </div>
            </div>
        </div>
    </div>    

    <script>
       async function saveEvent(event) {
    event.preventDefault();

    const eventName = document.getElementById('event-name').value.trim();
    const eventDate = document.getElementById('event-date').value;
    const eventOrganizer = document.getElementById('event-organizer').value.trim();
    const eventCategory = document.getElementById('event-category').value;
    const eventRewards = document.getElementById('event-rewards').value.trim();
    const instructions = document.getElementById('instructions').value.trim();
    const eventFile = document.getElementById('event-file').files[0];

    if (!eventName || !eventDate || !eventOrganizer || !eventCategory) {
      alert("Please fill in all required fields!");
      return;
    }

    const formData = new FormData();
    formData.append('eventName', eventName);
    formData.append('eventDate', eventDate);
    formData.append('eventOrganizer', eventOrganizer);
    formData.append('eventCategory', eventCategory);
    formData.append('eventRewards', eventRewards);
    formData.append('eventInstructions', instructions);
    if (eventFile) {
      formData.append('eventFile', eventFile);
    }

    try {
      const response = await fetch('/events', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        alert('Event saved successfully.');
        displayEvents();
        document.querySelector('form').reset();
      } else {
        const errorData = await response.json();
        alert('Error saving event: ' + errorData.message);
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while saving the event.');
    }
  }

  document.querySelector('form').addEventListener('submit', saveEvent);

  async function displayEvents() {
    try {
      const response = await fetch('/staff/api/events');
      if (response.ok) {
        const events = await response.json();
        const eventsList = document.getElementById('upcoming-events');

        eventsList.innerHTML = '';

        if (events.length === 0) {
          eventsList.innerHTML = '<p>No upcoming events</p>';
        } else {
          events.forEach((event) => {
            const eventItem = document.createElement('div');
            eventItem.classList.add('event-item');

            const eventText = document.createElement('span');
            eventText.textContent = `${event.eventName} (${new Date(event.eventDate).toLocaleDateString()}) - ${event.eventCategory}`;
            eventText.onclick = () => showEventDetails(event);

            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add('delete-btn');
            deleteButton.onclick = () => deleteEvent(event._id);

            eventItem.appendChild(eventText);
            eventItem.appendChild(deleteButton);
            eventsList.appendChild(eventItem);
          });
        }
      } else {
        console.error('Failed to fetch events.');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  }

  document.addEventListener('DOMContentLoaded', displayEvents);

  function showEventDetails(event) {
    document.getElementById('modal-event-name').textContent = event.eventName;
    document.getElementById('modal-event-date').textContent = new Date(event.eventDate).toLocaleDateString();
    document.getElementById('modal-event-organizer').textContent = event.eventOrganizer;
    document.getElementById('modal-event-category').textContent = event.eventCategory;
    document.getElementById('modal-event-rewards').textContent = event.eventRewards || 'N/A';
    document.getElementById('modal-instructions').textContent = event.eventInstructions || 'N/A';

    const fileContainer = document.getElementById('file-container');
    const fileContent = document.getElementById('modal-file-content');

    if (event.eventFile) {
      fileContainer.style.display = 'block';

      const fileURL = `/uploads/events/${event.eventFile}`;
      const fileType = event.eventFileType;

      if (fileType.startsWith('image/')) {
        fileContent.innerHTML = `<img src="${fileURL}" alt="Uploaded File" style="max-width: 100%; height: auto;">`;
      } else if (fileType === 'application/pdf') {
        fileContent.innerHTML = `<iframe src="${fileURL}" style="width: 100%; height: 300px;"></iframe>`;
      } else {
        fileContent.innerHTML = `<a href="${fileURL}" target="_blank" style="color: #32aaff;">Download File</a>`;
      }
    } else {
      fileContainer.style.display = 'none';
      fileContent.innerHTML = '';
    }

    document.getElementById('event-modal').style.display = 'block';
  }

  async function deleteEvent(eventId) {
    if (!confirm('Are you sure you want to delete this event?')) return;

    try {
      const response = await fetch(`/staff/api/events/${eventId}`, {
        method: 'DELETE',
      });

      if (response.ok) {
        alert('Event deleted successfully.');
        displayEvents(); 
      } else {
        const errorData = await response.json();
        alert('Error deleting event: ' + errorData.message);
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while deleting the event.');
    }
  }

document.querySelector('form').addEventListener('submit', saveEvent);
document.querySelector('.modal-close').addEventListener('click', () => {
    document.getElementById('event-modal').style.display = 'none';
});

    </script>
</body>
</html>


